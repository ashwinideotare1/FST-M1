<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="d7f47fe2-a04e-431b-89d4-b927faf92372" created="3.10.0" activeEnvironment="Default" name="PetStoreRest" updated="3.10.0 2021-09-14T15:18:10Z" encryptionMode="Not encrypted" abortOnError="false" runType="SEQUENTIAL" soapui-version="5.6.0" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:RestService" id="c555ff07-6863-4007-bd46-dd13aa5a7569" wadlVersion="http://wadl.dev.java.net/2009/02" name="" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache/>
    <con:endpoints/>
    <con:resource name="Petstore.swagger.io" path="//https://petstore.swagger.io" id="c0c8cf8e-6968-44cd-9ba8-e3b10995eb1e">
      <con:settings/>
      <con:parameters/>
      <con:method name="Petstore.swagger.io" id="3be6c37a-853c-4642-9142-2e8d6b2104ae" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:request name="Request 1" id="26cdbbc0-851b-4ae2-9906-e5d08fee0a19" mediaType="application/json">
          <con:settings/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:testSuite id="60ba02fe-e3a2-4ba0-9134-5432ca8efacf" name="Test Suite">
    <con:settings/>
    <con:savedRecentRuns>1</con:savedRecentRuns>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="537bdd36-24ca-46a0-8ef8-c629995ab182" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Test Case 1" searchProperties="true" timeout="0" maxResults="0">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="Request 1" id="2c2805dd-ce47-4e7d-a280-41d0d6eba1b3">
        <con:settings/>
        <con:config service="" resourcePath="//https://petstore.swagger.io" methodName="Petstore.swagger.io" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Request 1" id="26cdbbc0-851b-4ae2-9906-e5d08fee0a19" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>/https://petstore.swagger.io</con:endpoint>
            <con:request/>
            <con:assertion type="Valid HTTP Status Codes" id="be585c5d-9bac-4a6b-acc1-e5d6e07fa161" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="jdbc" name="JDBC Request" id="2775fbfc-376f-47bb-af2a-ccd36d966320">
        <con:settings>
          <con:setting id="prettyPrintResponse">true</con:setting>
        </con:settings>
        <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dbConnectionName>PetData</con:dbConnectionName>
          <con:driver>com.mysql.jdbc.Driver</con:driver>
          <con:connectionString>jdbc:mysql://remotemysql.com:3306/CGpfjlbstY?user=CGpfjlbstY&amp;password=PASS_VALUE</con:connectionString>
          <con:password>Sav3dVDTJ4</con:password>
          <con:connectionProperties/>
          <con:query>Select *
 FROM petData;</con:query>
          <con:properties/>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer>
    <con:databaseConnection>
      <con:name>PetData</con:name>
      <con:driver>com.mysql.jdbc.Driver</con:driver>
      <con:connectionString>jdbc:mysql://remotemysql.com:3306/CGpfjlbstY?user=CGpfjlbstY&amp;password=PASS_VALUE</con:connectionString>
      <con:password>Sav3dVDTJ4</con:password>
      <con:connectionProperties/>
    </con:databaseConnection>
  </con:databaseConnectionContainer>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:xmlTemplates/>
    <con:parameters/>
  </con:reporting>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>